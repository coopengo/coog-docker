#!/bin/sh

###############################################################################
# Image configuration                                                         #
###############################################################################

###############################################################################
# Image registries
# CUSTOM_IMAGE_REGISTRY=                        # Default registry to pull image
# from. Defaults to hub.docker.com/coopengohub
#
# Services can have custom image registries by overriding the following
# variables:
#
# CUSTOM_IMAGE_REGISTRY_COOG=                   # Registry for backoffice coog image
# CUSTOM_IMAGE_REGISTRY_STATIC=                 # Registry for backoffice static image

###############################################################################
# Image names, should usually not change
#
# CUSTOM_IMAGE_NAME_COOG=                       # Defaults to "coog"
# CUSTOM_IMAGE_NAME_STATIC=                     # Defaults to "coog-static"
# CUSTOM_IMAGE_NAME_UNOCONV=                    # Defaults to "uwsgi-libreoffice-converter"
# CUSTOM_IMAGE_NAME_PAYBOX=                     # Defaults to "coog-paybox"

# APIs
# CUSTOM_IMAGE_NAME_API=                        # Defaults to "coog-api"
# CUSTOM_IMAGE_NAME_API_B2B_CONFIG=             # Defaults to "coog-api-b2b-config"
# CUSTOM_IMAGE_NAME_API_IDENTITY_MANAGER=       # Defaults to "coog-api-identity-manager"
# CUSTOM_IMAGE_NAME_API_REFERENTIAL=            # Defaults to "coog-api-referential"
# CUSTOM_IMAGE_NAME_GATEWAY=                    # Defaults to "coog-gateway"
# CUSTOM_IMAGE_NAME_WEB=                        # Defaults to "coog-web"
# CUSTOM_IMAGE_NAME_API_B2C=                    # Defaults to "coog-api-b2c"

# Front
# CUSTOM_IMAGE_NAME_APP_B2C=                    # Defaults to "coog-app-b2c"
# CUSTOM_IMAGE_NAME_PORTAL=                     # Defaults to "coog-b2b"

# B2C
# CUSTOM_IMAGE_NAME_B2C_BACK=                   # Defaults to "coog-customer-backend"
# CUSTOM_IMAGE_NAME_B2C_FRONT=                  # Defaults to "coog-customer-frontend"

###############################################################################
# The current images for the project. Usually, they will all have the same
# value, which will be inherited from IMAGE_VERSION_DEFAULT, however in some
# cases it can be nevessary to specify custom values.

# IMAGE_VERSION_DEFAULT=
IMAGE_VERSION_COOG=                             # Image version for coog back
# IMAGE_VERSION_STATIC=                         # Image version for static
# IMAGE_VERSION_UNOCONV=                        # Image version for unoconv, default value should be fine

# APIs
#IMAGE_VERSION_API=                             # Image version for APIs
#IMAGE_VERSION_API_B2B_CONFIG=                  # Image version for B2B configuration
#IMAGE_VERSION_API_IDENTITY_MANAGER=            # Image verison for Identity management
#IMAGE_VERSION_API_REFERENTIAL=                 # Image version for API referential
#IMAGE_VERSION_GATEWAY=                         # Image version for Gateways
#IMAGE_VERSION_WEB=                             # Image version for legacy APIs

# Front
#IMAGE_VERSION_APP_B2C=                         # Image for B2C front application
#IMAGE_VERSION_PORTAL=                          # Image for B2B front application

###############################################################################
# Project wide configuration                                                  #
###############################################################################

# Name of the compose project, defaults to "coog"
# COMPOSE_PROJECT_NAME=                         # Project name

# Logging level
# COOG_LOG_LEVEL: log level for backoffice components, defaults to warning
# API_LOG_PERIMETER: log level for APIs, defaults to *

# Filesystem
FILESYSTEM_ROOT=                                # Root directory

# Custom values. For each of those, the default value will be
# $FILESYSTEM_ROOT/$COMPOSE_PROJECT_NAME/<dedicated_folder>
# CUSTOM_COOG_TMP_VOLUME=                       # coog_tmp => temporary data
# CUSTOM_COOG_DATA_VOLUME=                      # coog_data => batchs I/O, edm
# CUSTOM_POSTGRES_DATA_VOLUME=                  # postgresql_data => backoffice database
# CUSTOM_MONGODB_DATA_VOLUME=                   # mongodb_data => api database
# CUSTOM_REDIS_DATA_VOLUME=                     # redis_data => legacy api database

###############################################################################
# Network configuration                                                       #
###############################################################################

# Docker networks configuration, subnets need changing if there are other
# existing docker networks on the system
# CUSTOM_NETWORK_BACKEND_NAME=                  # Backend network name, defaults to COMPOSE_PROJECT_NAME-coog-back
# CUSTOM_NETWORK_BACKEND_SUBNET=                # Backend subnet mask, defaults to 10.0.1.0/24
# CUSTOM_NETWORK_FRONTEND_NAME=                 # Frontend network name, defaults to COMPOSE_PROJECT_NAME-coog-front
# CUSTOM_NETWORK_FRONTEND_SUBNET=               # Frontend subnet mask, defaults to 10.0.2.0/24

# In some cases (development, etc...), we want to be able to plug some services
# to other services that run on the host network.
# Setting this value to "1" will enable referencing the host network in URLs
# (ex: CUSTOM_COOG_INTERNAL_URL) with host.docker.internal
# ENABLE_HOST_NETWORK_INTEGRATION=

###############################################################################
# Exposition configuration                                                    #
###############################################################################

# The base url for accessing the project, defaults to $COMPOSE_PROJECT_NAME.localhost
# PROJECT_HOSTNAME=

# Allows to switch to https if the certificates are properly set. Defaults to
# http
# MAIN_URL_SCHEME=

# Traefik configuration location. If modification are needed, it is
# strongly recommended to use a "custom" folder.
# By default, it will automatically create a default configuration in the
# custom folder if it exists, or directly reuse the default/traefik folder
# (which is only fine on development environments)
# TRAEFIK_CONFIGURATION_FOLDER=

###############################################################################
# Backoffice Database configuration                                           #
###############################################################################

# Name of the main database. If you change it, you will need to manually create
# a new database in the postgresql instance and trigger its initialization.
# defaults to "coog"
# COOG_MAIN_DATABASE=

# If there are additional backoffice databases to manage (preload, update,
# etc.)
# COOG_EXTRA_DATABASES=

# Database configuration. The default values are for a postgres instance
# running as a container under the "postgres" name
# CUSTOM_POSTGRES_HOST=                         # host, defaults to "postgres"
# CUSTOM_POSTGRES_PORT=                         # port, defaults to 5432
# CUSTOM_POSTGRES_USER=                         # username, defaults to "coog"
# CUSTOM_POSTGRES_PASSWORD=                     # password, defaults to "coog"

# For some use cases (testing, debugging, etc.), we may want to only start the
# api / front part of the application, and connect to a running Coog instance.
# In that case, setting the following variable should be enough
# CUSTOM_COOG_INTERNAL_URL=

###############################################################################
# API / Front Database configuration                                          #
###############################################################################

# CUSTOM_GATEWAY_MAIN_DATABASE=                 # main database for gateway, defaults to coog-gateway
# CUSTOM_API_V1_MAIN_DATABASE=                  # main database for api v1, defaults to coog-api-v1
# CUSTOM_API_V2_MAIN_DATABASE=                  # main database for api v2, defaults to coog-api-v2
# CUSTOM_IDENTITY_MANAGER_MAIN_DATABASE=        # main database for identity manager, defaults to coog-identity-manager

# Access to the main api database. By default assumes a containerized mongo
# under the "mongo" name
# CUSTOM_MONGO_HOST=                            # host, defaults to "mongo"
# CUSTOM_MONGO_PORT=                            # port, defaults to 27017
# CUSTOM_MONGO_USER=                            # user, defaults to "coog"
# CUSTOM_MONGO_PASSWORD=                        # password, defaults to "coog"

###############################################################################
# Message Broker configuration                                                #
###############################################################################

# Access to the message broker. Usually will be containerized, there should be
# no reason to actually modify this since the broker is only used for
# non-persistent data, so there is no real gain to using a dedicated server
# CUSTOM_RABBITMQ_HOST=                         # host, defaults to "rabbitmq"
# CUSTOM_RABBITMQ_PORT=                         # port, defaults to 5672
# CUSTOM_RABBITMQ_USER=                         # user, defaults to "guest"
# CUSTOM_RABBITMQ_PASSWORD=                     # password, defaults to "guest"

# RabbitMQ configuration location. If modification are needed, it is
# strongly recommended to use a "custom" folder.
# CUSTOM_RABBITMQ_FOLDER=

###############################################################################
# Services deployment information                                             #
###############################################################################

# Whitelist for CORS, defaults to MAIN_URL_SCHEME://PROJECT_HOSTNAME
# CORS_WHITELIST=

###############################################################################
# Backoffice configuration                                                    #
###############################################################################

# Number of server processes per container, defaults to 1
# COOG_SERVER_WORKERS=

# Number of celery processes per container, defaults to 1
# COOG_CELERY_WORKERS=

# Queues for main celery process. If not set, all queues will be added
# COOG_CELERY_CUSTOM_QUEUES=

# If set to "1", will enable statistics collection for coog, defaults to 0
# COOG_UWSGI_STATS=

# If set to "1", will enable traceback dumping for running coog processes,
# defaults to 0
# COOG_UWSGI_TRACEBACKER=

# Passphrase to encrypt sensitive informations. It is heavily recommended to
# set one, so that credentials stored in the database cannot be retrieved even
# if it is compromised
# COOG_PASSPHRASE=

###############################################################################
# Front-Office configuration                                                  #
###############################################################################

# Backoffice token that will be used by API Gateway to communicate with the
# backoffice. Should be associated to a user with access to all APIs (admin,
# coog_api_user)
COOG_GATEWAY_TOKEN=

# How the API users are allowed to authenticate
# ENABLE_GOOGLE_AUTHENTICATION=                 # Enable Google SSO, defaults to false
# ENABLE_COOG_AUTHENTICATION=                   # Enable Coog users login, defaults to True
# ENABLE_COOG_TOKEN_AUTHENTICATION=             # Enable Coog login through tokens, detaults to true

# Inter services communication token, used to encrypt communications between
# various services
JWT_ENCRYPTION=
# CUSTOM_JWT_EXPIRATION=                        # Token validity (seconds), defaults to 3600 (1h)
# CUSTOM_DOCUMENT_TOKEN_SECRET=                 # Specific token for document exchanges, defaults to JWT_ENCRYPTION

###############################################################################
# B2C configuration                                                           #
###############################################################################

# B2C Backend
# URL to access backend API only. Admin panel URL is set during image build (static)
# CUSTOM_B2C_BACKEND_URL=

# B2C Database configuration
# Access to the main database
# CUSTOM_POSTGRES_B2C_DB=
# CUSTOM_POSTGRES_B2C_HOST=
# CUSTOM_POSTGRES_B2C_PORT=
# CUSTOM_POSTGRES_B2C_USER=
# CUSTOM_POSTGRES_B2C_PASSWORD=

# B2C Backend external URL
# Used by Frontend at runtime to request Backend API
# Customize only sub route
# CUSTOM_B2C_BACKEND_SUB_ROUTE=
# or complete route
# CUSTOM_B2C_BACKEND_EXTERNAL_URL=

# B2C Backend internal URL
# Used by Frontend at build time to request Backend GraphQL API
# CUSTOM_B2C_FRONTEND_BUILD_INTERNAL_API_URL=

# B2C Frontend prefix path
# CUSTOM_B2C_FRONT_PATH_PREFIX=
