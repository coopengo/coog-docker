#!/bin/bash
###############################################################################
# Check the statistics for the backoffice server
###############################################################################
set -euo pipefail

if docker-compose --version >/dev/null 2>&1; then
  if [[ $(docker-compose --version | grep -Eo '(v)?[[:digit:]]+.[[:digit:]]+.[[:digit:]]+' | cut -d '.' -f 1) =~ 1 ]]; then
    echo "Error: docker-compose 1.xx.xx is not supported, please update your docker-compose"
    echo "https://docs.docker.com/compose/install/other/#install-compose-standalone"
    exit 1
  fi
  echo 'Info: docker-compose found'
  export DOCKER_COMMAND="docker-compose"
elif docker compose version >/dev/null 2>&1; then
  if [[ $(docker compose version | grep -Eo '(v)?[[:digit:]]+.[[:digit:]]+.[[:digit:]]+' | cut -d '.' -f 1) =~ 1 ]]; then
    echo "Error: docker compose 1.xx.xx is not supported, please update your 'docker compose' plugin"
    echo "https://docs.docker.com/compose/install/linux/#install-using-the-repository"
    exit 1
  fi
  echo 'Info: docker compose plugin found'
  export DOCKER_COMMAND="docker compose"
else
  echo 'Error: Neither docker compose nor docker-compose was found, please install docker compose'
  echo 'https://docs.docker.com/compose/install/linux/#install-using-the-repository'
  exit 1
fi
echo "DOCKER_COMMAND=$DOCKER_COMMAND"

BASE_PATH=$(realpath "$(dirname $0)/../..")

stats_enabled=$(. $BASE_PATH/.env && echo $COOG_UWSGI_STATS)

if [[ "$stats_enabled" != "1" ]]; then
  echo Stats disabled, set the COOG_UWSGI_STATS variable to 1 to enable them >&2
  exit 2
fi

coog_running=$(${DOCKER_COMMAND} ps --services | grep "^coog$" || true)
if [[ ! "$coog_running" ]]; then
  echo Coog service is not running >&2
  exit 2
fi

${DOCKER_COMMAND} exec coog uwsgi --connect-and-read /tmp/uwsgi_stats
