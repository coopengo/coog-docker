#!/bin/bash
###############################################################################
# Shortcut to docker-compose up. Updates configuration before running
###############################################################################
set -euo pipefail

BASE_PATH=$(realpath "$(dirname "$0")/..")
. "${BASE_PATH}/bin/helpers/colors.sh"
. "${BASE_PATH}/bin/helpers/docker-compose"

"${BASE_PATH}/bin/configure"

section "Starting up"
${DOCKER_COMMAND} --env-file "${BASE_PATH}/.env" up "$@"

echo " "
section "Enable extension"
DB_USER=$(source "${BASE_PATH}/.env" && echo "${POSTGRES_USER}")
DB_NAME=$(source "${BASE_PATH}/.env" && echo "${COOG_DATABASES}")
DB_HOST=$(source "${BASE_PATH}/.env" && echo "${POSTGRES_HOST}")
DB_PORT=$(source "${BASE_PATH}/.env" && echo "${POSTGRES_PORT}")


sleep 2

for DATABASE in ${DB_NAME};
do
  echo "Working on the ${DATABASE}'s database"
  for EXTENTION in pg_trgm unaccent;
  do
    if [[ ${DB_HOST} == "postgres" ]];
    then
      ${DOCKER_COMMAND} exec -T -- postgres \
        psql -U "${DB_USER}" -d "${DATABASE}" -c "CREATE EXTENSION IF NOT EXISTS ${EXTENTION};" > /dev/null
    else
      psql -U "${DB_USER}" -h "${DB_HOST}" -p "${DB_PORT}" -d "${DATABASE}" -c "CREATE EXTENSION IF NOT EXISTS ${EXTENTION};" > /dev/null
    fi
  done
  echo " "
done
