services:
  b2c-front:
    extends:
      file: compose/b2c/front_common.yml
      service: b2c-front-common
    depends_on:
      b2c-front-init:
        condition: service_completed_successfully
    labels:
      - traefik.enable=true
      - traefik.http.routers.b2cfront.rule=Host(`${PROJECT_HOSTNAME:?}`) && PathPrefix(`${B2C_FRONT_PATH_PREFIX:?}`)
      - traefik.http.routers.b2cfront.entrypoints=http
      - traefik.http.routers.b2cfront.middlewares=b2cfront
      - traefik.http.middlewares.b2cfront.replacepathregex.regex=${B2C_FRONT_PATH_PREFIX:?}(/|$$)(.*)
      - traefik.http.middlewares.b2cfront.replacepathregex.replacement=/$$2
      - traefik.http.routers.b2cfront_s.rule=Host(`${PROJECT_HOSTNAME:?}`) && PathPrefix(`${B2C_FRONT_PATH_PREFIX:?}`)
      - traefik.http.routers.b2cfront_s.middlewares=b2cfront_s
      - traefik.http.middlewares.b2cfront_s.replacepathregex.regex=${B2C_FRONT_PATH_PREFIX:?}(/|$$)(.*)
      - traefik.http.middlewares.b2cfront_s.replacepathregex.replacement=/$$2
      - traefik.http.routers.b2cfront_s.entrypoints=https
      - traefik.http.routers.b2cfront_s.tls=true
    restart: always
    networks:
      - backend
      - frontend
