#!/bin/bash
###############################################################################
# The following variables are the "main" values. Most of the technical        #
# variables in the final section are computed from those main values, and     #
# should not be manually modified without being extra careful                 #
###############################################################################

###############################################################################
# Image configuration                                                         #
###############################################################################
# Where images will be pulled from
IMAGE_REGISTRY=${CUSTOM_IMAGE_REGISTRY:-coopengohub}
IMAGE_REGISTRY_COOG=${CUSTOM_IMAGE_REGISTRY_COOG:-${IMAGE_REGISTRY}}
IMAGE_REGISTRY_STATIC=${CUSTOM_IMAGE_REGISTRY_STATIC:-${IMAGE_REGISTRY}}

###############################################################################
# Image names, should usually not change
# Back
IMAGE_NAME_COOG=${CUSTOM_IMAGE_NAME_COOG:-coog}
IMAGE_NAME_STATIC=${CUSTOM_IMAGE_NAME_STATIC:-static}
IMAGE_NAME_UNOCONV=${CUSTOM_IMAGE_NAME_UNOCONV:-uwsgi-libreoffice-converter}

# APIs
IMAGE_NAME_API=${CUSTOM_IMAGE_NAME_API:-api}
IMAGE_NAME_API_B2B_CONFIG=${CUSTOM_IMAGE_NAME_API_B2B_CONFIG:-api-b2b-config}
IMAGE_NAME_API_IDENTITY_MANAGER=${CUSTOM_IMAGE_NAME_API_IDENTITY_MANAGER:-api-identity-manager}
IMAGE_NAME_API_REFERENTIAL=${CUSTOM_IMAGE_NAME_API_REFERENTIAL:-api-referential}
IMAGE_NAME_GATEWAY=${CUSTOM_IMAGE_NAME_GATEWAY:-gateway}
IMAGE_NAME_WEB=${CUSTOM_IMAGE_NAME_WEB:-web}

# Front
IMAGE_NAME_APP_B2C=${CUSTOM_IMAGE_NAME_APP_B2C:-app-b2c}
IMAGE_NAME_PORTAL=${CUSTOM_IMAGE_NAME_PORTAL:-portal}

###############################################################################
# The current images for the project
# Back
IMAGE_VERSION_COOG=${IMAGE_VERSION_COOG:?}
IMAGE_VERSION_STATIC=${IMAGE_VERSION_STATIC:-${IMAGE_VERSION_COOG}}
IMAGE_VERSION_UNOCONV=${IMAGE_VERSION_UNOCONV:-0.4}

# APIs
IMAGE_VERSION_API=${IMAGE_VERSION_API:-${IMAGE_VERSION_COOG}}
IMAGE_VERSION_API_B2B_CONFIG=${IMAGE_VERSION_API_B2B_CONFIG:-${IMAGE_VERSION_COOG}}
IMAGE_VERSION_API_IDENTITY_MANAGER=${IMAGE_VERSION_API_IDENTITY_MANAGER:-${IMAGE_VERSION_COOG}}
IMAGE_VERSION_API_REFERENTIAL=${IMAGE_VERSION_API_REFERENTIAL:-${IMAGE_VERSION_COOG}}
IMAGE_VERSION_GATEWAY=${IMAGE_VERSION_GATEWAY:-${IMAGE_VERSION_COOG}}
IMAGE_VERSION_WEB=${IMAGE_VERSION_WEB:-${IMAGE_VERSION_COOG}}

# Front
IMAGE_VERSION_APP_B2C=${IMAGE_VERSION_APP_B2C:-${IMAGE_VERSION_COOG}}
IMAGE_VERSION_PORTAL=${IMAGE_VERSION_PORTAL:-${IMAGE_VERSION_COOG}}

###############################################################################
# Project wide configuration                                                  #
###############################################################################

# Log level
COOG_LOG_LEVEL=${COOG_LOG_LEVEL:-WARNING}
API_DEBUG_LEVEL=${API_LOG_PERIMETER:-*}

# Name of project used for compose and docker swarm
COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME:-coog}

# Where all data will be effectively stored. Will be automatically created if
# needed
FILESYSTEM_ROOT=${FILESYSTEM_ROOT:?}/${COMPOSE_PROJECT_NAME}

# Mount points
COOG_TMP_VOLUME=${COOG_TMP:-${FILESYSTEM_ROOT}/coog_tmp}        # Temporary filesystem
COOG_DATA_VOLUME=${COOG_VOLUME:-${FILESYSTEM_ROOT}/coog_data}        # Backoffice data (batches i/o, edm)
POSTGRES_DATA_VOLUME=${POSTGRES_DATA_VOLUME:-${FILESYSTEM_ROOT}/postgresql_data}        # Backoffice db data
MONGODB_DATA_VOLUME=${MONGODB_DATA_VOLUME:-${FILESYSTEM_ROOT}/mongodb_data}        # Api db data
REDIS_DATA_VOLUME=${REDIS_DATA_VOLUME:-${FILESYSTEM_ROOT}/redis_data}        # Api db data

###############################################################################
# Network configuration                                                       #
###############################################################################

NETWORK_BACKEND_NAME=${CUSTOM_NETWORK_BACKEND_NAME:-${COMPOSE_PROJECT_NAME}-coog-backend}
NETWORK_BACKEND_SUBNET=${CUSTOM_NETWORK_BACKEND_SUBNET:-10.0.1.0/24}
NETWORK_FRONTEND_NAME=${CUSTOM_NETWORK_FRONTEND_NAME:-${COMPOSE_PROJECT_NAME}-coog-frontend}
NETWORK_FRONTEND_SUBNET=${CUSTOM_NETWORK_FRONTEND_SUBNET:-10.0.2.0/24}

###############################################################################
# Exposition configuration                                                    #
###############################################################################

# Exposed traefik port: Where the stack will be available. Do not change unless
# you know what you are doing
PROJECT_HOSTNAME=${PROJECT_HOSTNAME:-${COMPOSE_PROJECT_NAME}.localhost}

TRAEFIK_HTTP_PORT=80
TRAEFIK_HTTPS_PORT=443
TRAEFIK_MANAGMENT_PORT=8080

TRAEFIK_CERTS_PATH=./defaults/traefik/certs
TRAEFIK_TOML_PATH=./defaults/traefik/traefik.toml
TRAEFIK_CONFIG_TOML_PATH=./defaults/traefik/traefik.config.toml
TRAEFIK_ACME_PATH=./defaults/traefik/acme.json

# Base url, used for CORS management
MAIN_URL_SCHEME=${MAIN_URL_SCHEME:-http}
BASE_URL=${MAIN_URL_SCHEME}://${PROJECT_HOSTNAME}

###############################################################################
# Backoffice Database configuration                                           #
###############################################################################

# Name of the main database. If you change it, you will need to manually create
# a new database in the postgresql instance and trigger its initialization
COOG_MAIN_DATABASE=${COOG_MAIN_DATABASE:-coog}

# Name of all backoffice databases.
COOG_DATABASES=${COOG_MAIN_DATABASE},${COOG_EXTRA_DATABASES:-}

# Access to the main database
POSTGRES_HOST=${CUSTOM_POSTGRES_HOST:-postgres}
POSTGRES_PORT=${CUSTOM_POSTGRES_PORT:-5432}
POSTGRES_USER=${CUSTOM_POSTGRES_USER:-coog}
POSTGRES_PASSWORD=${CUSTOM_POSTGRES_PASSWORD:-coog}

# Connection string
POSTGRESQL_CONNECTION_STRING=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${COOG_MAIN_DATABASE}

###############################################################################
# API / Front Database configuration                                          #
###############################################################################

GATEWAY_MAIN_DATABASE=${CUSTOM_GATEWAY_MAIN_DATABASE:-coog-gateway}
API_V1_MAIN_DATABASE=${CUSTOM_API_V1_MAIN_DATABASE:-coog-api-v1}
API_V2_MAIN_DATABASE=${CUSTOM_API_V2_MAIN_DATABASE:-coog-api-v2}
IDENTITY_MANAGER_MAIN_DATABASE=${CUSTOM_IDENTITY_MANAGER_MAIN_DATABASE:-coog-identity-manager}

# Access to the main database
MONGO_HOST=${CUSTOM_MONGO_HOST:-mongo}
MONGO_PORT=${CUSTOM_MONGO_PORT:-27017}
MONGO_USER=${CUSTOM_MONGO_USER:-coog}
MONGO_PASSWORD=${CUSTOM_MONGO_PASSWORD:-coog}

###############################################################################
# Redis configuration                                                         #
###############################################################################

# Access to the main database
REDIS_HOST=${CUSTOM_REDIS_HOST:-redis}
MONGO_PORT=${CUSTOM_MONGO_PORT:-27017}
MONGO_USER=${CUSTOM_MONGO_USER:-coog}
MONGO_PASSWORD=${CUSTOM_MONGO_PASSWORD:-coog}

###############################################################################
# Message Broker configuration                                                #
###############################################################################

RABBITMQ_HOST=${CUSTOM_RABBITMQ_HOST:-rabbitmq}
RABBITMQ_PORT=${CUSTOM_RABBITMQ_PORT:-5672}
RABBITMQ_USER=${CUSTOM_RABBITMQ_USER:-guest}
RABBITMQ_PASSWORD=${CUSTOM_RABBITMQ_PASSWORD:-guest}

RABBITMQ_URI=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}


###############################################################################
# Services deployment information                                             #
###############################################################################

# Internal services addresses
# Defaults to a full docker-compose setup. Can be modified to plug-in local
# services if needed
API_GATEWAY_INTERNAL_URL=http://gateway:3000
API_B2B_CONFIG_INTERNAL_URL=http://api-b2b-config:3000
API_B2C_INTERNAL_URL=http://api-b2c:3000
API_IDENTITY_MANAGER_INTERNAL_URL=http://api-identity-manager:3000
API_REFERENTIAL_INTERNAL_URL=http://api-referential:3000
API_API_V1_INTERNAL_URL=http://web:3000
API_API_V2_INTERNAL_URL=http://api:3000
COOG_INTERNAL_URL=${CUSTOM_COOG_INTERNAL_URL:-http://coog:8000}

# External services addresses
# Used by services that need to know how to access the service
GATEWAY_SUB_ROUTE=gateway
GATEWAY_EXTERNAL_URL=${CUSTOM_GATEWAY_EXTERNAL_URL:-${BASE_URL}/${GATEWAY_SUB_ROUTE}}
PORTAL_SUB_ROUTE=portal
PORTAL_EXTERNAL_URL=${CUSTOM_PORTAL_EXTERNAL_URL:-${BASE_URL}/${PORTAL_SUB_ROUTE}}
API_V1_SUB_ROUTE=web/api

# CORS configuration, can be extended if needed
CORS_WHITELIST=${CORS_WHITELIST:-${BASE_URL}}

###############################################################################
# Backoffice configuration                                                    #
###############################################################################

# Number of server processes per container
COOG_SERVER_WORKERS=${COOG_SERVER_WORKERS:-1}

# Number of celery processes per container
COOG_CELERY_WORKERS=${COOG_CELERY_WORKERS:-1}

# Enable uwsgi statistics
COOG_UWSGI_STATS=${COOG_UWSGI_STATS:-0}

# Enable uwsgi tracebackers
COOG_UWSGI_TRACEBACKER=${COOG_UWSGI_TRACEBACKER:-0}

# Swap to redis if needed
CELERY_BROKER_URI=${RABBITMQ_URI}

###############################################################################
# Front-Office configuration                                                  #
###############################################################################

# Backoffice token that will be used by API Gateway to communicate with the
# backoffice. Should be associated to a user with access to all APIs (admin,
# coog_api_user)
COOG_GATEWAY_TOKEN=${COOG_GATEWAY_TOKEN=?}

# How the API users are allowed to authenticate
ENABLE_GOOGLE_AUTHENTICATION=${ENABLE_GOOGLE_AUTHENTICATION:-false}
ENABLE_COOG_AUTHENTICATION=${ENABLE_COOG_AUTHENTICATION:-true}
ENABLE_COOG_TOKEN_AUTHENTICATION=${ENABLE_COOG_TOKEN_AUTHENTICATION:-true}

# Inter services communication
JWT_ENCRYPTION=${JWT_ENCRYPTION:?}
JWT_INTERNAL_ENCRYPTION=${JWT_ENCRYPTION}
JWT_EXPIRATION=${CUSTOM_JWT_EXPIRATION:-3600}
